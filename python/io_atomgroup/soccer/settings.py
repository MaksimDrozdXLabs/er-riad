"""
Django settings for soccer project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import json
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('WEB_SECRET_KEY', 'django-insecure-qq+75g969@kj0bpu2f&&#nxt5_2cb0ltk7g#m6bl0(qm*k1mg5')

# SECURITY WARNING: don't run with debug turned on in production!

CELERY_BROKER_URL = 'redis://redis:6379/0'
SIO_REDIS = 'redis://redis:6379/1'

if 'WEB_STATIC_VIEW' in os.environ:
    STATIC_VIEW = json.loads(os.environ['WEB_STATIC_VIEW'])
else:
    STATIC_VIEW = True

if 'WEB_DEBUG' in os.environ:
    DEBUG = json.loads(os.environ['WEB_DEBUG'])
else:
    DEBUG = False

if 'WEB_ALLOWED_HOSTS' in os.environ:
    ALLOWED_HOSTS = json.loads(os.environ['WEB_ALLOWED_HOSTS'])
else:
    ALLOWED_HOSTS = ['web']

if 'WEB_CORS_ORIGIN_WHITELIST' in os.environ:
    CORS_ORIGIN_WHITELIST = json.loads(os.environ['WEB_CORS_ORIGIN_WHITELIST'])
    FASTAPI_CORS_ALLOW_ORIGINS = CORS_ORIGIN_WHITELIST
else:
    CORS_ORIGIN_ALLOW_ALL = True
    FASTAPI_CORS_ALLOW_ORIGINS = ['*']

if 'WEB_CSRF_TRUSTED_ORIGINS' in os.environ:
    CSRF_TRUSTED_ORIGINS = json.loads(os.environ['WEB_CSRF_TRUSTED_ORIGINS'])
else:
    CSRF_TRUSTED_ORIGINS = ["http://127.0.0.1"]

if 'WEB_NEED_CSRF' in os.environ:
    NEED_CSRF = json.loads(os.environ['WEB_NEED_CSRF'])
else:
    NEED_CSRF = True

# Application definition

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'DEFAULT_AUTHENTICATION_CLASSES': [
        #'rest_framework.authentication.BasicAuthentication',
        #'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
}


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'python.io_atomgroup.soccer.participant.apps.ParticipantConfig',
    'python.io_atomgroup.soccer.estimator',
    'python.io_atomgroup.soccer.api',
    'rest_framework',
    'rest_framework.authtoken',
    'django_celery_beat',
    'drf_yasg',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
]

if NEED_CSRF:
    MIDDLEWARE.extend([
        'django.middleware.csrf.CsrfViewMiddleware',
    ])

MIDDLEWARE.extend([
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
])

if NEED_CSRF:
    MIDDLEWARE.extend([
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ])

ROOT_URLCONF = 'python.io_atomgroup.soccer.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'python.io_atomgroup.soccer.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR.parent.parent.parent / 'tmp' / 'db.sqlite3',
        'OPTIONS': {
            'timeout': 4,  # in seconds
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

CSRF_COOKIE_HTTPONLY = True


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'

if not DEBUG:
    STATIC_ROOT = BASE_DIR.parent.parent.parent / 'tmp' / 'static'

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "INFO",
    },
}

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
