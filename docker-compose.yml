version: '3'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./tmp/static:/static:ro
    env_file:
      - ".env"
    ports:
      - ${NGINX_PORTS:-127.0.0.1:80:80}
    networks:
      - soccer
  mqtt:
    # image: eclipse-mosquitto
    container_name: mqtt
    build:
      context: .
      dockerfile: docker/mqtt/Dockerfile
    volumes:
      - ./docker/mqtt:/app/docker/mqtt:ro
      - ./docker/mqtt/config:/mosquitto/config:ro
      - ./tmp/mqtt:/app/tmp/mqtt:rw
    env_file:
      - ".env"
    networks:
      - soccer

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    # image: analytics-app-image:latest
    volumes:
      - ./deps/frontend:/app/deps/frontend:rw
      - ./docker/frontend:/app/docker/frontend:ro
      - ./tmp:/app/tmp:rw
    env_file:
      - ".env"
    networks:
      - soccer

  web:
    container_name: web
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    # image: analytics-app-image:latest
    volumes:
      - ./:/app:rw
      - ./tmp:/app/tmp:rw
    env_file:
      - ".env"
    networks:
      - soccer

  celery-beat:
    container_name: celery-beat
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    # image: analytics-app-image:latest
    volumes:
      - ./:/app:rw
      - ./tmp:/app/tmp:rw
    command:
      - celery -A python.io_atomgroup.soccer beat
    env_file:
      - ".env"
    networks:
      - soccer

  celery-worker:
    container_name: celery-beat
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    # image: analytics-app-image:latest
    command: ["celery", "-A", "python.io_atomgroup.soccer", "worker"]
    volumes:
      - ./:/app:rw
      - ./tmp:/app/tmp:rw
    env_file:
      - ".env"
    networks:
      - soccer

networks:
  soccer:
    driver: bridge
